INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 4
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
INFO:root:Action : Reduce rule [expression -> INT] with [2] and goto state 43
INFO:root:Result : <int @ 0x1f0a2a00110> (2)
INFO:root:Action : Reduce rule [expression -> expression + expression] with [1,'+',2] and goto state 4
INFO:root:Result : <int @ 0x1f0a2a00130> (3)
INFO:root:Action : Reduce rule [expression -> INT] with [3] and goto state 43
INFO:root:Result : <int @ 0x1f0a2a00130> (3)
INFO:root:Action : Reduce rule [expression -> expression + expression] with [3,'+',3] and goto state 4
INFO:root:Result : <int @ 0x1f0a2a00190> (6)
INFO:root:Action : Reduce rule [statement -> expression] with [6] and goto state 1
INFO:root:Result : <NoneType @ 0x7ffe895a17f8> (None)
INFO:root:Done   : Returning <NoneType @ 0x7ffe895a17f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 56
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
INFO:root:Action : Reduce rule [expression -> ( expression )] with ['(',1,')'] and goto state 29
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
ERROR:root:Error  : KIF expression . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 56
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
INFO:root:Action : Reduce rule [expression -> ( expression )] with ['(',1,')'] and goto state 29
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
ERROR:root:Error  : KIF expression . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 56
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
INFO:root:Action : Reduce rule [expression -> ( expression )] with ['(',1,')'] and goto state 29
INFO:root:Result : <int @ 0x1f0a2a000f0> (1)
ERROR:root:Error  : KIF expression . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 56
INFO:root:Result : <int @ 0x221d82000f0> (1)
INFO:root:Action : Reduce rule [expression -> ( expression )] with ['(',1,')'] and goto state 29
INFO:root:Result : <int @ 0x221d82000f0> (1)
ERROR:root:Error  : KIF expression . LexToken({,'{',1,6)
ERROR:root:Error  : KIF expression . error
ERROR:root:Error  : KIF . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken(},'}',1,9)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 56
INFO:root:Result : <int @ 0x221d82000f0> (1)
INFO:root:Action : Reduce rule [expression -> ( expression )] with ['(',1,')'] and goto state 29
INFO:root:Result : <int @ 0x221d82000f0> (1)
ERROR:root:Error  : KIF expression . LexToken({,'{',1,5)
ERROR:root:Error  : KIF expression . error
ERROR:root:Error  : KIF . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken(},'}',1,8)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [condition -> BOOL] with [True] and goto state 36
INFO:root:Result : <bool @ 0x7ffe89594b68> (True)
INFO:root:Action : Reduce rule [condition -> ( condition )] with ['(',True,')'] and goto state 27
INFO:root:Result : <bool @ 0x7ffe89594b68> (True)
ERROR:root:Error  : KIF condition { . LexToken(},'}',1,11)
ERROR:root:Error  : KIF condition { . error
ERROR:root:Error  : KIF condition . error
ERROR:root:Error  : KIF . error
ERROR:root:Error  : . error
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [condition -> BOOL] with [True] and goto state 36
INFO:root:Result : <bool @ 0x7ffe89594b68> (True)
INFO:root:Action : Reduce rule [condition -> ( condition )] with ['(',True,')'] and goto state 27
INFO:root:Result : <bool @ 0x7ffe89594b68> (True)
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 4
INFO:root:Result : <int @ 0x2004ded00f0> (1)
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 43
INFO:root:Result : <int @ 0x2004ded00f0> (1)
INFO:root:Action : Reduce rule [expression -> expression + expression] with [1,'+',1] and goto state 4
INFO:root:Result : <int @ 0x2004ded0110> (2)
INFO:root:Action : Reduce rule [statement -> expression] with [2] and goto state 66
INFO:root:Result : <NoneType @ 0x7ffe895a17f8> (None)
ERROR:root:Error  : KIF condition { statement } . $end
