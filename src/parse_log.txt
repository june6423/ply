INFO:root:PLY: PARSE DEBUG START
ERROR:root:Error  : . LexToken(KIF,'if',1,0)
ERROR:root:Error  : . LexToken(BOOL,True,1,3)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
ERROR:root:Error  : . LexToken(KIF,'if',1,1)
ERROR:root:Error  : . LexToken(BOOL,True,1,4)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
ERROR:root:Error  : KPACKAGE KMAIN . $end
INFO:root:PLY: PARSE DEBUG START
ERROR:root:Error  : KPACKAGE KMAIN . LexToken(ID,'n',1,14)
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken(KIMPORT,'import',1,16)
ERROR:root:Error  : . LexToken(",'"',1,23)
ERROR:root:Error  : . LexToken(ID,'fmt',1,24)
ERROR:root:Error  : . LexToken(",'"',1,27)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> ID] with ['fmt'] and goto state 17
INFO:root:Result : <int @ 0x28eaa8a00d0> (0)
INFO:root:Action : Reduce rule [statement -> expression] with [0] and goto state 14
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
INFO:root:Action : Reduce rule [string -> " statement "] with ['"',None,'"'] and goto state 5
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> ID] with ['fmt'] and goto state 17
INFO:root:Result : <int @ 0x28eaa8a00d0> (0)
INFO:root:Action : Reduce rule [statement -> expression] with [0] and goto state 14
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
INFO:root:Action : Reduce rule [string -> " statement "] with ['"',None,'"'] and goto state 5
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . LexToken(KMAIN,'main',1,31)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT . error
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken((,'(',1,35)
ERROR:root:Error  : . LexToken(),')',1,36)
ERROR:root:Error  : . LexToken({,'{',1,38)
ERROR:root:Error  : . LexToken(},'}',1,39)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> ID] with ['fmt'] and goto state 17
INFO:root:Result : <int @ 0x28eaa8a00d0> (0)
INFO:root:Action : Reduce rule [statement -> expression] with [0] and goto state 14
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
INFO:root:Action : Reduce rule [string -> " statement "] with ['"',None,'"'] and goto state 5
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . LexToken(KMAIN,'main',1,31)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT . error
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken((,'(',1,36)
ERROR:root:Error  : . LexToken(),')',1,37)
ERROR:root:Error  : . LexToken({,'{',1,39)
ERROR:root:Error  : . LexToken(},'}',1,41)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [expression -> ID] with ['fmt'] and goto state 17
INFO:root:Result : <int @ 0x29c7fe500d0> (0)
INFO:root:Action : Reduce rule [statement -> expression] with [0] and goto state 14
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
INFO:root:Action : Reduce rule [string -> " statement "] with ['"',None,'"'] and goto state 5
INFO:root:Result : <NoneType @ 0x7ffeda818fe0> (None)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . LexToken(KMAIN,'main',1,31)
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string KFUNC . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT string . error
ERROR:root:Error  : KPACKAGE KMAIN KIMPORT . error
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken((,'(',1,35)
ERROR:root:Error  : . LexToken(),')',1,36)
ERROR:root:Error  : . LexToken({,'{',1,38)
ERROR:root:Error  : . LexToken(},'}',1,39)
ERROR:root:Error  : . $end
